/*
 * 문제 요약
 *     학생들의 번호가 담긴 배열에서, 서로 다른 3명의 학생 번호를 골라 합이 0이 되면 삼총사로 간주
 *     삼총사를 만들 수 있는 모든 경우의 수를 구하라
 *
 * 입력
 *     int[] number : 학생 번호 배열 (3 ≤ number.length ≤ 13, 각 원소는 -1000 ~ 1000)
 *
 * 출력
 *     int : 합이 0이 되는 서로 다른 3명 조합의 수
 *
 * 핵심 포인트
 *     - 최대 길이가 13이므로 완전탐색(3중 반복 또는 비트마스킹)이 가능
 *     - 비트마스킹을 활용하여 3명을 선택하는 모든 조합 생성 (총 2^13 = 8192가지)
 *     - 각 조합의 합이 0인지 검사
 */

class Solution {

    public int solution(int[] number) {
        int cnt = 0;

        // 비트마스킹으로 3명 선택하는 조합 생성
        for (int i = 0; i < (1 << number.length); i++) {
            if (Integer.bitCount(i) == 3) {   // 선택된 비트가 정확히 3개인 경우만
                int sum = 0;

                // 선택된 학생들의 번호 합 구하기
                for (int j = 0; (1 << j) <= i; j++) {
                    if ((i & (1 << j)) != 0) {
                        sum += number[j];
                    }
                }

                // 삼총사 조건 만족
                if (sum == 0) cnt++;
            }
        }

        return cnt;
    }
}
